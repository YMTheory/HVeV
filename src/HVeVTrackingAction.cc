#include "HVeVTrackingAction.hh"
#include "GlobalDataManager.hh"

#include "G4Track.hh"
#include "G4StepStatus.hh"
#include "G4SystemOfUnits.hh"
#include "G4ThreeVector.hh"
#include "G4VProcess.hh"
#include "G4TrackingManager.hh"
#include "G4ParticleDefinition.hh"

HVeVTrackingAction::HVeVTrackingAction()
:G4UserTrackingAction()
{ }

void HVeVTrackingAction::PreUserTrackingAction(const G4Track* track)
{
    G4String name              = track->GetDefinition()->GetParticleName();
    G4double energy            = track->GetKineticEnergy()/eV;  
    G4ThreeVector pretrackpos  = track->GetPosition();
    G4double pretrack_x        = pretrackpos.getX()/mm; 
    G4double pretrack_y        = pretrackpos.getY()/mm;
    G4double pretrack_z        = pretrackpos.getZ()/mm;
    G4int trackID              = track->GetTrackID();
    G4int parentID             = track->GetParentID();
    const  G4VProcess* creator = track->GetCreatorProcess();

    if (parentID == 0) {
        G4cout << "Primary preTracking TrackID " << trackID << " "
               << name << " "
               << energy << " eV "
               << pretrack_x << " "
               << pretrack_y << " "
               << pretrack_z << " mm"
               << G4endl;
    } 
    if (parentID == 1 and creator) {
        G4cout << "Secondary preTracking TrackID " << trackID << " generated by"
               << creator->GetProcessName() << " from " << parentID << " " 
               << name << " "
               << energy << " eV "
               << pretrack_x << " "
               << pretrack_y << " "
               << pretrack_z << " mm"
               << G4endl;

    }

    int verboseLevel = fpTrackingManager->GetVerboseLevel();
    if (verboseLevel > 0) {
        /// Nuclear recoil debugging
        G4ParticleDefinition* particle = track->GetDefinition();
        if(particle->GetParticleName() == "Li7") {
            G4double recoilEnergy = track->GetKineticEnergy();
            if (recoilEnergy > 0) {
                GlobalDataManager::GetInstance()->SetLi7TrackID(trackID);
                G4cout << "Li7 Nuclear recoil detected! Energy = " << recoilEnergy / eV << " eV with track ID = " << trackID << G4endl;
            }
        }

        if (particle->GetParticleType() == "phonon" and parentID == GlobalDataManager::GetInstance()->GetLi7RecoilTrackID())
        {
            GlobalDataManager::GetInstance()->AddOnePhonon();    
            GlobalDataManager::GetInstance()->AddLi7RecoilPhononEnergy(energy);
            G4cout << "Nuclear recoiled phonon " << trackID << " "
                   << name << " "
                   << energy << " eV "
                   << pretrack_x << " "
                   << pretrack_y << " "
                   << pretrack_z << " mm"
                   << G4endl;
        }
        if (particle->GetParticleType() == !"phonon" and parentID == GlobalDataManager::GetInstance()->GetLi7RecoilTrackID())
        {
            G4cout << "Nuclear recoiled non-phonon daughters: " << trackID << " "
                   << name << " "
                   << energy << " eV "
                   << pretrack_x << " "
                   << pretrack_y << " "
                   << pretrack_z << " mm"
                   << G4endl;
        }
    }
    
    // Set tracks to be visualized
    if (trackID < 40) {
    //if (track->GetParentID() == 0 or track->GetParentID() == 1 or track->GetParentID() == 2) {
        fpTrackingManager->SetStoreTrajectory(true);
    } else {
        fpTrackingManager->SetStoreTrajectory(false);
    }

}

void HVeVTrackingAction::PostUserTrackingAction(const G4Track* track)
{
    G4StepStatus stauts = track->GetStep()->GetPostStepPoint()->GetStepStatus();
    G4String name              = track->GetDefinition()->GetParticleName();
    G4double energy            = track->GetKineticEnergy()/eV;  
    G4ThreeVector pretrackpos  = track->GetPosition();
    G4double pretrack_x        = pretrackpos.getX()/mm; 
    G4double pretrack_y        = pretrackpos.getY()/mm;
    G4double pretrack_z        = pretrackpos.getZ()/mm;
    G4int trackID              = track->GetTrackID();
    G4int parentID             = track->GetParentID();
    if (parentID == 0) {
        G4cout << "Primary postTracking TrackID " << trackID << " "
               << name << " "
               << energy << " eV "
               << pretrack_x << " "
               << pretrack_y << " "
               << pretrack_z << " mm"
               << G4endl;
    }
}